{"ast":null,"code":"var _jsxFileName = \"/Users/kudiuser/Desktop/staking/src/airdrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { connect, isConnected } from \"./redux/stakeBlockchain/blockchainActions\";\nimport { fetchData, balance, rewards } from \"./redux/stakeData/dataActions\";\nimport { fetchDataM, hasApproved } from \"./redux/data/dataActions2\";\nimport \"./styles/stake.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Airdrop = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [feedback, setFeedback] = useState(\"STAKE\");\n  const [claiming, setClaiming] = useState(false);\n  const [_stake, _unStake] = useState(\"STAKE\");\n  const account = blockchain.account;\n  const [tokenId, setTokenId] = useState([]);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n  useEffect(() => {\n    dispatch(connectM());\n  }, []); // useEffect(()=>{\n  //     setTimeout(() => {\n  //         hasApproved ? dispatch(connect()) : dispatch(connectM())\n  //     }, 3000);\n  // },[])\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  const getDataM = () => {\n    if (account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchDataM());\n    }\n  };\n\n  const getData = () => {\n    if (account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData());\n    }\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n  useEffect(() => {\n    getDataM();\n    getData();\n  }, [account]);\n\n  const approve = async () => {\n    dispatch(connectM());\n    await blockchain.smartContract.methods.setApprovalForAll(CONFIG.CONTRACT_ADDRESS, true).send({\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: account\n    });\n    dispatch(connect());\n  };\n\n  const claim = async tokenId => {\n    setClaiming(true);\n    dispatch(connect());\n    await blockchain.smartContract.methods.claimAll().send({\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: account\n    }).once(\"error\", err => {\n      console.log(err);\n      setClaiming(false);\n    }).then(Response => {\n      setClaiming(false);\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setTokenId(parseInt(e.target.value.split(\" \")));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"airdroppage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-btn\",\n        onClick: e => {\n          !isConnected ? dispatch(connectM()) : e.preventDefault();\n        },\n        children: !isConnected ? \"Connect Wallet\" : account.slice(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airdrops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Read  the Medium post for all the details on each Airdrop program.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: claiming ? \"claiming..\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container airdropitem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"reward\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"BALANCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 52\n          }, this), ' ', balance / 10 ** 18, ' ', \" $AMMO\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: claim,\n            children: \"Claim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Airdrop, \"zhUHujllN7wlICJG6lSoAC+Z6IU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Airdrop;\nexport default Airdrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Airdrop\");","map":{"version":3,"sources":["/Users/kudiuser/Desktop/staking/src/airdrop.js"],"names":["React","useEffect","useState","useDispatch","useSelector","connectM","connect","isConnected","fetchData","balance","rewards","fetchDataM","hasApproved","Airdrop","dispatch","blockchain","state","data","feedback","setFeedback","claiming","setClaiming","_stake","_unStake","account","tokenId","setTokenId","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","getConfig","configResponse","fetch","headers","Accept","config","json","getDataM","smartContract","getData","approve","methods","setApprovalForAll","send","to","from","claim","claimAll","once","err","console","log","then","Response","handleChange","e","preventDefault","parseInt","target","value","split","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { connect, isConnected } from \"./redux/stakeBlockchain/blockchainActions\";\nimport { fetchData, balance, rewards} from \"./redux/stakeData/dataActions\";\nimport {fetchDataM, hasApproved } from \"./redux/data/dataActions2\";\n\nimport \"./styles/stake.css\";\n\nconst Airdrop = () => {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [feedback, setFeedback] = useState(\"STAKE\");\n    const [claiming, setClaiming] = useState(false)\n    const [_stake, _unStake] = useState(\"STAKE\");\n    const account = blockchain.account;\n    const [tokenId, setTokenId] = useState([]);\n    const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n    useEffect(()=>{\n        dispatch(connectM())\n        \n    },[])\n\n    // useEffect(()=>{\n    //     setTimeout(() => {\n    //         hasApproved ? dispatch(connect()) : dispatch(connectM())\n    //     }, 3000);\n    // },[])\n    const getConfig = async () => {\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n    const getDataM = () => {\n        if (account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchDataM())\n        }\n    };\n    const getData = () => {\n        if (account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData())\n        }\n    };\n    useEffect(() => {\n        getConfig();\n    }, []);\n    useEffect(() => {\n        getDataM();\n        getData();\n    }, [account]);\n    \n    const approve = async () => {\n        dispatch(connectM());\n        await blockchain.smartContract.methods\n        .setApprovalForAll(CONFIG.CONTRACT_ADDRESS, true)\n        .send({\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: account\n        })\n        dispatch(connect())\n    }\n\n    const claim = async (tokenId) => {\n        setClaiming(true)\n        dispatch(connect())\n        await blockchain.smartContract.methods.claimAll()\n        .send({\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: account\n        })\n            .once(\"error\", (err) => {\n                console.log(err)\n                setClaiming(false)\n            })\n            .then((Response)=>{\n                setClaiming(false)\n            })\n    }\n    const handleChange = (e) =>{\n        e.preventDefault();\n        setTokenId(parseInt(e.target.value.split(\" \")));\n    }\n\n    return ( \n        <main className=\"airdroppage\">\n            <div>\n                <button \n                    className=\"connect-btn\"\n                    onClick={(e)=>{\n                        !isConnected ?\n                        dispatch(connectM())\n                        : e.preventDefault()\n                    } }\n                >\n                    {!isConnected ? \"Connect Wallet\" : account.slice(0, 10)}\n                </button>\n            </div>\n            <h1>Airdrops</h1>\n            <h2>Read  the Medium post for all the details on each Airdrop program.</h2>\n            <h2>\n                {claiming ? \"claiming..\" : \"\"}\n            </h2>\n            <div className=\"card-container airdropitem\">\n                <div>\n                    {/* <div>\n                        <p>Stake Dogface Army</p>\n                        <p>Earn AMMO</p>\n                    </div> */}\n                    <blockquote className=\"reward\"><span>BALANCE</span>\n                    {' '}\n                    {balance / 10 ** 18}\n                    {' '} $AMMO\n                    </blockquote>\n                    <div>\n                        <button \n                            className=\"btn\"\n                            onClick={claim}>\n                            Claim\n                        </button>\n                    </div>\n                </div>\n                \n            </div>\n        </main>\n    );\n}\nexport default Airdrop ;\n"]},"metadata":{},"sourceType":"module"}