{"ast":null,"code":"// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\"\n  };\n};\n\nconst fetchDataSuccess = payload => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload\n  };\n};\n\nconst fetchDataFailed = payload => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload\n  };\n};\n\nexport let balance;\nexport let rewards;\nexport const fetchData = () => {\n  return async dispatch => {\n    dispatch(fetchDataRequest());\n\n    try {\n      let balanceOf = await store.getState().blockchain.smartContract.methods.balanceOf(store.getState().blockchain.account).call().then(response => {\n        balance = response;\n      });\n      let getAllRewards = await store.getState().blockchain.smartContract.methods.getAllRewards(store.getState().blockchain.account).call().then(response => {\n        rewards = response;\n      });\n      dispatch(fetchDataSuccess({\n        balanceOf,\n        getAllRewards\n      }));\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kudiuser/Desktop/staking/src/redux/stakeData/dataActions.js"],"names":["store","fetchDataRequest","type","fetchDataSuccess","payload","fetchDataFailed","balance","rewards","fetchData","dispatch","balanceOf","getState","blockchain","smartContract","methods","account","call","then","response","getAllRewards","err","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAE,oBADD;AAELE,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,eAAe,GAAID,OAAD,IAAa;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELE,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALD;;AAMA,OAAO,IAAIE,OAAJ;AACP,OAAO,IAAIC,OAAJ;AACP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE7B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;;AACA,QAAI;AAEF,UAAIS,SAAS,GAAG,MAAMV,KAAK,CAC1BW,QADqB,GAErBC,UAFqB,CAEVC,aAFU,CAEIC,OAFJ,CAEYJ,SAFZ,CAEsBV,KAAK,CAACW,QAAN,GAAiBC,UAAjB,CAA4BG,OAFlD,EAGnBC,IAHmB,GAInBC,IAJmB,CAIbC,QAAD,IAAc;AAClBZ,QAAAA,OAAO,GAAGY,QAAV;AACD,OANmB,CAAtB;AAQA,UAAIC,aAAa,GAAG,MAAMnB,KAAK,CAC9BW,QADyB,GAEzBC,UAFyB,CAEdC,aAFc,CAEAC,OAFA,CAEQK,aAFR,CAEsBnB,KAAK,CAACW,QAAN,GAAiBC,UAAjB,CAA4BG,OAFlD,EAGzBC,IAHyB,GAIzBC,IAJyB,CAInBC,QAAD,IAAY;AAChBX,QAAAA,OAAO,GAAGW,QAAV;AACD,OANyB,CAA1B;AAOAT,MAAAA,QAAQ,CACNN,gBAAgB,CAAC;AACfO,QAAAA,SADe;AAEfS,QAAAA;AAFe,OAAD,CADV,CAAR;AAMD,KAvBD,CAuBE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAX,MAAAA,QAAQ,CAACJ,eAAe,CAAC,oCAAD,CAAhB,CAAR;AACD;AACF,GA7BD;AA8BD,CAhCM","sourcesContent":["// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\nexport let balance;\nexport let rewards;\nexport const fetchData = () => {\n\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n\n      let balanceOf = await store\n      .getState()\n      .blockchain.smartContract.methods.balanceOf(store.getState().blockchain.account)\n        .call()\n        .then((response) => {\n          balance = response;\n        })\n\n      let getAllRewards = await store\n      .getState()\n      .blockchain.smartContract.methods.getAllRewards(store.getState().blockchain.account)\n      .call()\n      .then((response)=>{\n        rewards = response;\n      })\n      dispatch(\n        fetchDataSuccess({\n          balanceOf,\n          getAllRewards\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}